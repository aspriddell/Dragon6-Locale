<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
  </data>
  <data name="Admin" xml:space="preserve">
    <value>Dragon6 Admin</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>Go Back</value>
  </data>
  <data name="Barricades" xml:space="preserve">
    <value>Barricades</value>
  </data>
  <data name="Beta" xml:space="preserve">
    <value>Beta Tester</value>
  </data>
  <data name="Bomb" xml:space="preserve">
    <value>Bomb</value>
  </data>
  <data name="CasualDeaths" xml:space="preserve">
    <value>{0} Casual Deaths</value>
  </data>
  <data name="CasualKD" xml:space="preserve">
    <value>Casual K/D</value>
  </data>
  <data name="CasualKills" xml:space="preserve">
    <value>{0} Casual Kills</value>
  </data>
  <data name="CasualLosses" xml:space="preserve">
    <value>{0} Casual Losses</value>
  </data>
  <data name="CasualWins" xml:space="preserve">
    <value>{0} Casual Wins</value>
  </data>
  <data name="CasualWL" xml:space="preserve">
    <value>Casual W/L</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>Clear</value>
  </data>
  <data name="CompareButton" xml:space="preserve">
    <value>Compare Players</value>
  </data>
  <data name="CompareRank" xml:space="preserve">
    <value>Overall Rank</value>
  </data>
  <data name="Contributors" xml:space="preserve">
    <value>Contributors</value>
  </data>
  <data name="CurrentRegion" xml:space="preserve">
    <value>Current Region:</value>
  </data>
  <data name="CurrentSeason" xml:space="preserve">
    <value>Ranked - Current Season</value>
  </data>
  <data name="Deaths" xml:space="preserve">
    <value>Deaths</value>
  </data>
  <data name="Downs" xml:space="preserve">
    <value>Downs</value>
  </data>
  <data name="Dragon6PrivactLineTwo" xml:space="preserve">
    <value>We use the Dragon6 API to check account status, get tokens and ranked info. These may send the players iD, which is publicly avalible. Ubisoft servers are contacted directly by your computer to get the stats.</value>
  </data>
  <data name="Dragon6Privacy" xml:space="preserve">
    <value>Dragon6 Privacy</value>
  </data>
  <data name="Dragon6PrivacyLineOne" xml:space="preserve">
    <value>Dragon6 Desktop is Owned and Maintained by DragonFruit Network.</value>
  </data>
  <data name="Dragon6TeamDescription" xml:space="preserve">
    <value>The Official Dragon6 Team</value>
  </data>
  <data name="Dragon6TeamMaintainers" xml:space="preserve">
    <value>Maintained by DragonFruit Network</value>
  </data>
  <data name="Dragon6TeamTitle" xml:space="preserve">
    <value>Dragon6 Team</value>
  </data>
  <data name="GeneralRevives" xml:space="preserve">
    <value>Total Revives</value>
  </data>
  <data name="HeadshotPerc" xml:space="preserve">
    <value>Headshot %</value>
  </data>
  <data name="Headshots" xml:space="preserve">
    <value>Headshots</value>
  </data>
  <data name="Hostage" xml:space="preserve">
    <value>Hostage</value>
  </data>
  <data name="Hours" xml:space="preserve">
    <value>Hours</value>
  </data>
  <data name="KD" xml:space="preserve">
    <value>K/D</value>
  </data>
  <data name="Kills" xml:space="preserve">
    <value>Kills</value>
  </data>
  <data name="Level" xml:space="preserve">
    <value>Level</value>
  </data>
  <data name="LocalStorage" xml:space="preserve">
    <value>Locally Stored</value>
  </data>
  <data name="Losses" xml:space="preserve">
    <value>Losses</value>
  </data>
  <data name="MaxRank" xml:space="preserve">
    <value>Highest Rank</value>
  </data>
  <data name="Melee" xml:space="preserve">
    <value>Melee Kills</value>
  </data>
  <data name="MeleePerc" xml:space="preserve">
    <value>Melee %</value>
  </data>
  <data name="NewRegion" xml:space="preserve">
    <value>New Region:</value>
  </data>
  <data name="NewsPublisher" xml:space="preserve">
    <value>Published by {0}</value>
  </data>
  <data name="NewsTitle" xml:space="preserve">
    <value>Rainbow Six News</value>
  </data>
  <data name="OfficialList" xml:space="preserve">
    <value>Official List</value>
  </data>
  <data name="OperatorStatsButton" xml:space="preserve">
    <value>View Operator Stats</value>
  </data>
  <data name="OverallKD" xml:space="preserve">
    <value>Overall K/D</value>
  </data>
  <data name="OverallWL" xml:space="preserve">
    <value>Overall W/L</value>
  </data>
  <data name="PlayerName" xml:space="preserve">
    <value>Player Name</value>
  </data>
  <data name="Points" xml:space="preserve">
    <value>Points</value>
  </data>
  <data name="Privacy" xml:space="preserve">
    <value>Privacy</value>
  </data>
  <data name="Rank" xml:space="preserve">
    <value>Current Rank</value>
  </data>
  <data name="RankedDeaths" xml:space="preserve">
    <value>{0} Ranked Deaths</value>
  </data>
  <data name="RankedKD" xml:space="preserve">
    <value>Ranked K/D</value>
  </data>
  <data name="RankedKills" xml:space="preserve">
    <value>{0} Ranked Kills</value>
  </data>
  <data name="RankedLosses" xml:space="preserve">
    <value>{0} Ranked Losses</value>
  </data>
  <data name="RankedWins" xml:space="preserve">
    <value>{0} Ranked Wins</value>
  </data>
  <data name="RankedWL" xml:space="preserve">
    <value>Ranked W/L</value>
  </data>
  <data name="Recent" xml:space="preserve">
    <value>Recents</value>
  </data>
  <data name="RecentsDescription" xml:space="preserve">
    <value>Once you search for a player, come back here and you'll see them in this list. We will keep the 20 most recent searches, so it doesn't get too cluttered.</value>
  </data>
  <data name="RecentsHeader" xml:space="preserve">
    <value>Find Players you've searched for in the past.</value>
  </data>
  <data name="RegionChangerText" xml:space="preserve">
    <value>Change Region</value>
  </data>
  <data name="RegionSelectorText" xml:space="preserve">
    <value>Current Ranked Region: {0}</value>
  </data>
  <data name="Reinforcements" xml:space="preserve">
    <value>Reinforcements</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="RemoveAccount" xml:space="preserve">
    <value>Remove Account</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Revives" xml:space="preserve">
    <value>Revives</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SavedAccountsText" xml:space="preserve">
    <value>Saved Accounts (Beta)</value>
  </data>
  <data name="SavePlayerText" xml:space="preserve">
    <value>Save {0} to quickly access their stats in the Saved Players Page</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="Season" xml:space="preserve">
    <value>Season</value>
  </data>
  <data name="SecureArea" xml:space="preserve">
    <value>Secure Area</value>
  </data>
  <data name="Squad" xml:space="preserve">
    <value>Squad</value>
  </data>
  <data name="SquadListing" xml:space="preserve">
    <value>Squad Listing</value>
  </data>
  <data name="SquadPlatformText" xml:space="preserve">
    <value>Plays on {0}</value>
  </data>
  <data name="StandardUser" xml:space="preserve">
    <value>Standard User</value>
  </data>
  <data name="StatsComparison" xml:space="preserve">
    <value>Stats Comparison (Beta)</value>
  </data>
  <data name="Suicides" xml:space="preserve">
    <value>Suicides</value>
  </data>
  <data name="Supporter" xml:space="preserve">
    <value>Dragon6 Supporter</value>
  </data>
  <data name="TerroristHunt" xml:space="preserve">
    <value>Terrorist Hunt</value>
  </data>
  <data name="Translator" xml:space="preserve">
    <value>Dragon6 Translator</value>
  </data>
  <data name="UserBlocked" xml:space="preserve">
    <value>The owner of this account has blocked access to view stats.</value>
  </data>
  <data name="Verified" xml:space="preserve">
    <value>Verified User</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="Wins" xml:space="preserve">
    <value>Wins</value>
  </data>
  <data name="WL" xml:space="preserve">
    <value>W/L</value>
  </data>
  <data name="YearSelection" xml:space="preserve">
    <value>Year {0}</value>
  </data>
</root>